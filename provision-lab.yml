- name: Download RHEL ISOs
  hosts: vm_host
  vars_files:
    - vars.yml
  tasks:
    - name: Include downloader role
      ansible.builtin.include_role:
        name: package-downloader
      vars:
        rh_product_filename: "{{ item.filename }}"
        rh_product_name: "{{ item.product }}"
        rh_api_offline_token: "{{ offline_token }}"
      loop:
        - filename: rhel8.iso
          product: "rhel8"
        - filename: rhel9.iso
          product: "rhel9"
      when:
        - offline_token is defined
        - offline_token != ""

- name: This play provisions VMs for Satellite demos
  hosts: vm_host
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Provision libvirt VM using role
      ansible.builtin.include_role:
        name: host-provisioner
      vars:
        host_modules: "{{ modules }}"
        host_domain: "{{ domain }}"
        host_tf_vars:
          network_cidr: ' ["{{ network_cidr }}"]'
          aap2_controller_setup: "{{ install_aap2 | default(false, true) }}"
          aap2_hub_setup: "{{ install_aap2 | default(false, true) }}"
          satellite_setup: "{{ install_satellite | default(false, true) }}"
          sso_setup: "{{ install_sso | default(false, true) }}"
          idm_setup: "{{ install_idm | default(false, true) }}"
          rhel_setup: "{{ install_rhel | default(false, true) }}"

    - name: Ensure to clean known_hosts
      ansible.builtin.known_hosts:
        host: "{{ item.hostname }}.{{ domain }}"
        path: ~/.ssh/known_hosts
        state: absent
      loop: "{{ modules }}"
      become: false

- name: Check connection to servers
  hosts: lab
  gather_facts: false
  tasks:
    - name: Waiting for installation to end, it can take time!
      ansible.builtin.wait_for_connection:
        timeout: 1800
        sleep: 120

    - name: Ping host to check status
      ansible.builtin.ping:

    - name: Setup is ready
      ansible.builtin.debug:
        msg: "Setup completed, now you can proceed with post install steps"
